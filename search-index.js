var searchIndex = new Map(JSON.parse('[\
["starry",{"t":"CCHCQCCSSSSSFFHONNNNOOONNHHHHNNHHOOOONNNNNNJHHJCHCCCCCHHHHCTTTTTTFFTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNCCHHGPPPPPPNNNNNNHHHHHNNNNNHFJJONNNONNNONHNNNO","n":["config","loader","main","mm","syscall_body","syscall_imp","task","KERNEL_STACK_SIZE","USER_SPACE_BASE","USER_SPACE_SIZE","USER_STACK_SIZE","USER_STACK_TOP","ELFInfo","ELFSegment","_app_count","auxv","borrow","borrow","borrow_mut","borrow_mut","data","entry","flags","from","from","get_app_count","get_app_data","get_app_data_by_name","get_app_name","into","into","list_apps","load_elf","offset","segments","size","start_vaddr","try_from","try_from","try_into","try_into","type_id","type_id","_LINKME_ELEMENT_handle_page_fault","handle_page_fault","load_user_app","_LINKME_ELEMENT_handle_syscall","fs","handle_syscall","mm","task","time","ctl","io","sys_ioctl","sys_read","sys_write","sys_writev","mmap","MAP_ANONYMOUS","MAP_FIXED","MAP_NORESERVE","MAP_PRIVATE","MAP_SHARED","MAP_STACK","MmapFlags","MmapProt","PROT_EXEC","PROT_READ","PROT_WRITE","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","complement","complement","contains","contains","difference","difference","empty","empty","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","not","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","sys_mmap","toggle","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","union","schedule","thread","sys_nanosleep","sys_sched_yield","ArchPrctlCode","GetCpuid","GetFs","GetGs","SetCpuid","SetFs","SetGs","borrow","borrow_mut","eq","fmt","from","into","sys_arch_prctl","sys_exit","sys_exit_group","sys_getpid","sys_set_tid_address","try_from","try_from","try_from_primitive","try_into","type_id","sys_clock_gettime","TaskExt","__AX_TASK_EXT_ALIGN","__AX_TASK_EXT_SIZE","aspace","borrow","borrow_mut","clear_child_tid","clear_child_tid","from","into","new","proc_id","set_clear_child_tid","spawn_user_task","try_from","try_into","type_id","uctx"],"q":[[0,"starry"],[7,"starry::config"],[12,"starry::loader"],[43,"starry::mm"],[46,"starry::syscall_imp"],[52,"starry::syscall_imp::fs"],[54,"starry::syscall_imp::fs::ctl"],[55,"starry::syscall_imp::fs::io"],[58,"starry::syscall_imp::mm"],[59,"starry::syscall_imp::mm::mmap"],[167,"starry::syscall_imp::task"],[169,"starry::syscall_imp::task::schedule"],[171,"starry::syscall_imp::task::thread"],[194,"starry::syscall_imp::time"],[195,"starry::task"],[213,"core::option"],[214,"memory_addr::addr"],[215,"core::result"],[216,"core::any"],[217,"page_table_entry"],[218,"axmm::aspace"],[219,"axerrno"],[220,"axhal::arch::x86_64::context"],[221,"core::ffi"],[222,"arceos_posix_api::ctypes"],[223,"core::iter::traits::collect"],[224,"core::fmt"],[225,"bitflags::iter"],[226,"num_enum"],[227,"kspin"],[228,"alloc::sync"],[229,"axtask::api"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,39,8,39,8,39,8,39,39,8,0,0,0,0,39,8,0,0,39,8,39,39,39,8,39,8,39,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,0,0,21,21,21,21,22,21,22,21,22,21,22,21,22,21,21,22,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,21,21,21,21,22,22,22,22,22,21,22,21,22,21,21,22,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,0,21,22,21,22,21,22,21,22,21,22,0,0,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,0,0,0,0,0,30,30,30,30,30,0,0,0,0,34,34,34,34,34,34,34,34,34,34,0,34,34,34,34],"f":"``{{}b}`````````````{ce{}{}}000```{cc{}}0{{}d}{d{{h{f}}}}{j{{l{{h{f}}}}}}{dj}556{{jn}A`}````{c{{Ab{e}}}{}{}}000{cAd{}}0`{{nAfAh}Ah}{j{{An{{Al{nnAj}}}}}}``{{B`d}Bb}`````{{BddBf}Bd}{{BdBfd}Bb}0{{BdBhBd}Bb}````````````{{}Bj}{{}Bl}{{BjBj}Bj}{{BlBl}Bl}{{BjBj}b}{{BlBl}b}3210{BjBd}0{BlBd}05432{ce{}{}}000{BjBj}{BlBl}{{BjBj}Ah}{{BlBl}Ah}:9<;{{Bjc}b{{C`{}{{Bn{Bj}}}}}}{{Blc}b{{C`{}{{Bn{Bl}}}}}}{{BjCb}Cd}0000{{BlCb}Cd}0000{cc{}}0{Bd{{l{Bj}}}}{Bd{{l{Bl}}}}{BdBj}0{BdBl}010{cBj{{C`{}{{Bn{Bj}}}}}}{cBl{{C`{}{{Bn{Bl}}}}}}{j{{l{Bj}}}}{j{{l{Bl}}}}{{BjBj}b}{{BlBl}b}{{BjBj}Bj}{{BlBl}Bl}{{BjBj}Ah}{{BlBl}Ah}{ce{}{}}0{Bjc{}}{Blc{}}{BjAh}{BlAh}10{Bj{{Cf{Bj}}}}{Bl{{Cf{Bl}}}}{Bj{{Ch{Bj}}}}{Bl{{Ch{Bl}}}}{BjBj}{BlBl}{{BjBj}b}{{BlBl}b}{{BjBjAh}b}{{BlBlAh}b}{{BjBj}Bj}{{BlBl}Bl}5410{{ddBdBdBdBb}d}65{c{{Ab{e}}}{}{}}000{cAd{}}043``{{CjCj}Bd}{{}Bd}```````{ce{}{}}0{{ClCl}Ah}{{ClCb}Cd}{cc{}}3{{BdCn}Bb}{BdD`}06{BdBb}:{Bd{{Ab{Cl{Db{Cl}}}}}}{c{{Ab{Cl{Db{Cl}}}}}{}}<;{{BdCj}Bd}````99{DdCn}`7:{{Df{Dj{{Dh{Aj}}}}}Dd}`{{DdCn}b}{{{Dj{{Dh{Aj}}}}Df}Dl}{c{{Ab{e}}}{}{}}0{cAd{}}`","D":"A@`","p":[[1,"unit"],[1,"usize"],[1,"u8"],[1,"slice"],[1,"str"],[6,"Option",213],[5,"VirtAddr",214],[5,"ELFInfo",12],[6,"Result",215],[5,"TypeId",216],[5,"MappingFlags",217],[1,"bool"],[5,"AddrSpace",218],[1,"tuple"],[8,"AxResult",219],[5,"TrapFrame",220],[1,"isize"],[1,"i32"],[6,"c_void",221],[5,"iovec",222],[5,"MmapProt",59],[5,"MmapFlags",59],[17,"Item"],[10,"IntoIterator",223],[5,"Formatter",224],[8,"Result",224],[5,"Iter",225],[5,"IterNames",225],[5,"timespec",222],[6,"ArchPrctlCode",171],[1,"u64"],[1,"never"],[5,"TryFromPrimitiveError",226],[5,"TaskExt",195],[5,"UspaceContext",220],[8,"SpinNoIrq",227],[5,"Arc",228],[8,"AxTaskRef",229],[5,"ELFSegment",12]],"r":[],"b":[[80,"impl-Flags-for-MmapProt"],[81,"impl-MmapProt"],[82,"impl-MmapFlags"],[83,"impl-Flags-for-MmapFlags"],[102,"impl-Debug-for-MmapProt"],[103,"impl-LowerHex-for-MmapProt"],[104,"impl-Octal-for-MmapProt"],[105,"impl-UpperHex-for-MmapProt"],[106,"impl-Binary-for-MmapProt"],[107,"impl-UpperHex-for-MmapFlags"],[108,"impl-Octal-for-MmapFlags"],[109,"impl-LowerHex-for-MmapFlags"],[110,"impl-Binary-for-MmapFlags"],[111,"impl-Debug-for-MmapFlags"],[116,"impl-MmapProt"],[117,"impl-Flags-for-MmapProt"],[118,"impl-Flags-for-MmapFlags"],[119,"impl-MmapFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFUAGAABAAAAAwABAAYAAQAPAAAAEQADACYABwAvAAcAOAADAFEAAABUAAAAWQADAGcACQB2AAEAhwABAJ0AAACgAAUAqAADALMAAwC5AAMAvgAFAMUAAQDIAAIAzgAAANAABAA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
